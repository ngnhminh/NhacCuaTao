import { f as u, h as b, j as A, c as M, k as D, l as j, m as k, n as E, d as C, i as N, o as R, p as S, q as x, e as O } from "./general-D5nVjUqG.js";
import { r as B, s as F, t as I, w as z, u as G, v as J } from "./general-D5nVjUqG.js";
import { j as e, m as f, c } from "./format-CMbjATj9.js";
import { n as Q, o as U, k as X, p as _ } from "./format-CMbjATj9.js";
const w = (n, r, a) => a.useValueAsName ? isNaN(Number(n)) ? e(a.option) === n : e(a.option) === Number(n) : e(a.option) === e(r), $ = (n, r, a) => {
  var t, l, y, i, s;
  if (a.useValueAsName) {
    if (a.minDate || a.maxDate)
      return !((t = a.minDate) == null || !t.year) && Number(n) < ((l = a.minDate) == null ? void 0 : l.year) || !((y = a.maxDate) == null || !y.year) && Number(n) > ((i = a.maxDate) == null ? void 0 : i.year);
    if (a.enabledDays)
      return a.enabledDays.every((o) => "start" in o && "end" in o ? o.start.year !== Number(n) || o.end.year !== Number(n) : o.year !== Number(n));
  } else {
    if (a.minDate || a.maxDate)
      return !!a.minDate && (a.minDate.year === e(a.year) && e(r) < a.minDate.month || ((s = a.minDate) == null ? void 0 : s.year) > (e(a.year) || 0)) || !!a.maxDate && a.maxDate.year === e(a.year) && e(r) > a.maxDate.month;
    if (a.enabledDays && e(a.year))
      return C({ year: e(a.year), month: e(r), enabledDays: a.enabledDays });
  }
  return !1;
}, H = (n, r, a, t) => {
  var l, y, i, s, o, g;
  if (a.useValueAsName) {
    const m = Number(r);
    (l = a.setOption) == null || l.call(a, m), (y = a.onYearChange) == null || y.call(a, m);
    const d = O({ startDay: a.startDay, year: m, type: a.type || "single" });
    d && ((i = a.onChange) == null || i.call(a, d));
  } else {
    (s = a.setOption) == null || s.call(a, n), (o = a.onMonthChange) == null || o.call(a, n);
    const m = O({ startDay: a.startDay, month: n, type: a.type || "single" });
    m && ((g = a.onChange) == null || g.call(a, m));
  }
  t == null || t();
}, L = ({ year: n, month: r, endDay: a, day: t, startDay: l, customDaysClassName: y, multipleObject: i, hideOutSideDays: s, hoverRangeValue: o, minDate: g, maxDate: m, disabledDays: d, enabledDays: T }) => {
  var p;
  const v = `${e(n)}-${u(e(r), t.month)}-${t.value}`;
  return { dayRangeEndHover: P(o, l, t, n, r), dayRangeStartEnd: (e(o).start || l) && (e(o).end || a) && (b({ year: e(n), month: e(r), day: t.value, dateRange: e(o).start || l, monthStatus: t.month }) || b({ year: e(n), month: e(r), day: t.value, dateRange: e(o).end || a, monthStatus: t.month })), dayRangeBetween: A({ year: e(n), month: e(r), day: t.value, startDate: e(o).start || l, endDate: e(o).end || a, monthStatus: t.month }), dayRangeStart: b({ year: e(n), month: e(r), day: t.value, dateRange: e(o).start || l, monthStatus: t.month }), dayRangeEnd: b({ year: e(n), month: e(r), day: t.value, dateRange: e(o).end || a, monthStatus: t.month }), daysCurrent: M(f(D(e(n), e(r), t.month), u(e(r), t.month), t.value)) && t.month === "current", daysNotCurrentMonth: t.month !== "current", ...j({ year: e(n), month: e(r), day: t }), customDayClass: (p = y == null ? void 0 : y.find((h) => h.year === D(e(n), e(r), t.month) && h.month === u(e(r), t.month) && h.day === t.value)) == null ? void 0 : p.className, isMultipleSelected: !(i == null || !i.find((h) => h.year === D(e(n), e(r), t.month) && h.month === u(e(r), t.month) && h.day === t.value)), hidden: !!s && t.month !== "current", disabled: k({ disabledDays: d, day: t, month: e(r), year: e(n) }) || E({ day: t, month: r, year: n, minDate: g, maxDate: m }) || C({ enabledDays: T, day: t, month: e(r), year: e(n) }), date: v, dateValue: v };
}, P = (n, r, a, t, l) => {
  var y, i;
  return !!((y = e(n).end) != null && y.day && (i = e(n).start) != null && i.day && r != null && r.day) && (N(e(n).start, r) ? R(e(n).start, { year: D(e(t), e(l), a.month), month: u(e(l), a.month), day: a.value }) : !!N(r, e(n).end) && R(e(n).end, { year: D(e(t), e(l), a.month), month: u(e(l), a.month), day: a.value }));
}, W = ({ year: n, day: r, startDay: a, endDay: t, disabledDays: l, month: y, hover: i, hoverEndDay: s, enabledDays: o, disallowSameDayRange: g }) => {
  if ((a && t || !a && !t) && !i && !s)
    return { start: { year: D(e(n), e(y), r.month), month: u(e(y), r.month), day: r.value }, end: void 0, initial: !0 };
  if (a && !t) {
    const m = f(a == null ? void 0 : a.year, a == null ? void 0 : a.month, a == null ? void 0 : a.day), d = f(D(e(n), e(y), r.month), u(e(y), r.month), r.value);
    if (m.getTime() === d.getTime())
      return g ? { start: a } : { start: a, end: c(d) };
    if (m.getTime() < d.getTime() && (l && S(m, d, l) || o && x(m, d, o)))
      return i ? { start: a } : { start: c(d), initial: !0 };
    if (m.getTime() > d.getTime() && (l && S(m, d, l) || o && x(d, m, o)))
      return i ? { start: a } : { start: c(d), initial: !0 };
    if (m.getTime() < d.getTime())
      return { end: c(d), start: a };
    if (m.getTime() > d.getTime())
      return { start: c(d), end: c(m) };
  }
  return { start: a, end: t };
};
export {
  L as applyDateRangeProps,
  B as breakArrayIntoSubArrays,
  R as compareObjectDate,
  F as currentYear,
  Q as formatHourWithLeadingZero,
  U as formatMinuteSecondWithLeadingZero,
  I as generateYearsArray,
  u as getDatePickerRefactoredMonth,
  D as getDatePickerRefactoredYear,
  z as getMonthDaysArray,
  O as getOnChangeSingleData,
  G as getRefactoredNextDate,
  J as getRefactoredPrevDate,
  X as getYearRange,
  W as handleDateRange,
  H as handleSelectorOptionClick,
  C as isNotPartOfEnabledDays,
  $ as isOptionDisabledOnSelector,
  w as isOptionSelectedOnSelector,
  _ as numberFormatter
};
