const S = (e) => typeof e == "function" ? e() : e, i = (e, t) => new Intl.NumberFormat(t || "en-US", { useGrouping: !1 }).format(e), m = (e, t, n) => {
  const l = new Date(e, t, n);
  return l.setFullYear(e), l;
}, d = (e, t) => String(Math.ceil(e)).padStart(t ?? 2, "0"), M = (e) => e === 0 ? 12 : e === 12 ? 0 : e > 12 ? e - 12 : e, D = (e) => e >= 12 ? "PM" : "AM", x = (e, t) => t === "AM" ? e === 12 ? 0 : e : e === 0 ? 12 : e === 12 ? e : e + 12;
function L() {
  const e = /* @__PURE__ */ new Date();
  let t = e.getHours(), n = "AM";
  return t > 12 && (t -= 12, n = "PM"), t === 12 && (n = "PM"), t === 0 && (t = 12), { hour: t, minute: e.getMinutes(), second: e.getSeconds(), meridiem: n };
}
function R({ startYear: e, endYear: t, count: n, year: l, yearRange: o, locale: g }) {
  const r = l || (/* @__PURE__ */ new Date()).getFullYear();
  if (!e) {
    const c = Math.floor(r / n) * n;
    e = c === r ? r - n + 1 : c + 1;
  }
  t || (t = e + n - 1);
  const a = [];
  let s = e, u = t;
  for (let c = e; c <= t; c++)
    o != null && o.start && c < (o == null ? void 0 : o.start) ? (a.push(""), s = o == null ? void 0 : o.start) : o != null && o.end && c > (o == null ? void 0 : o.end) ? (a.push(""), u = o == null ? void 0 : o.end) : a.push(i(c, g));
  return { array: a, range: `${i(s, g)} - ${i(u, g)}`, startYear: e, endYear: t };
}
const h = (e) => {
  let t;
  return t = typeof e == "string" || typeof e == "number" ? new Date(e) : e instanceof Date ? e : m(e.year || 2023, e.month || e.month === 0 ? e.month : 1, e.day), t;
}, E = (e) => ({ year: e.getFullYear(), month: e.getMonth(), day: e.getDate() }), f = (e) => {
  const t = /* @__PURE__ */ new Date(), n = (e == null ? void 0 : e.year) ?? t.getFullYear(), l = (e == null ? void 0 : e.month) === 0 ? 0 : (e == null ? void 0 : e.month) ?? t.getMonth(), o = (e == null ? void 0 : e.day) ?? t.getDate(), g = new Date(n, l, o);
  return g.setFullYear(n), g;
}, v = (e, t) => {
  const { localeOptions: n, locale: l, format: o } = t || {}, g = h(e);
  return w({ date: g, option: n || { month: "short", day: "numeric", year: "numeric" }, locale: l, format: o });
}, w = ({ format: e, option: t, date: n, locale: l }) => e ? ((o, g, r = "en-US") => {
  const a = h(o);
  return g.replace(new RegExp("(?<!~)(?<!n)nn(?!n)", "g"), a.toLocaleString(r, { minute: "2-digit" }).padStart(2, "0")).replace(new RegExp("(?<!~)(?<!n)n(?!n)", "g"), a.toLocaleString(r, { minute: "numeric" })).replace(new RegExp("(?<!~)(?<!s)ss(?!s)", "g"), a.toLocaleString(r, { second: "2-digit" }).padStart(2, "0")).replace(new RegExp("(?<!~)(?<!s)s(?!s)", "g"), a.toLocaleString(r, { second: "numeric" })).replace(new RegExp("(?<!~)(?<!h)hh(?!h)", "g"), a.toLocaleString(r, { hour: "2-digit", hour12: !0 }).split(" ")[0].padStart(2, "0")).replace(new RegExp("(?<!~)(?<!h)h(?!h)", "g"), a.toLocaleString(r, { hour: "numeric", hour12: !0 })).replace(new RegExp("(?<!~)(?<!H)HH(?!H)", "g"), a.toLocaleString(r, { hour: "2-digit", hour12: !1 }).split(" ")[0].padStart(2, "0")).replace(new RegExp("(?<!~)(?<!H)H(?!H)", "g"), a.toLocaleString(r, { hour: "numeric", hour12: !1 })).replace(new RegExp("(?<!~)(?<!a)a(?!a)", "g"), y(a.toLocaleString(r, { hour: "numeric", hour12: !0 }).split(" ")[1])).replace(new RegExp("(?<!~)(?<!y)yyyy(?!y)", "g"), a.toLocaleString(r, { year: "numeric" })).replace(new RegExp("(?<!~)(?<!y)yy(?!y)", "g"), a.toLocaleString(r, { year: "2-digit" })).replace(new RegExp("(?<!~)(?<!m)m(?!m)", "g"), a.toLocaleString(r, { month: "numeric" })).replace(new RegExp("(?<!~)(?<!m)mm(?!m)", "g"), a.toLocaleString(r, { month: "2-digit" })).replace(new RegExp("(?<!~)(?<!d)dd(?!d)", "g"), a.toLocaleString(r, { day: "2-digit" })).replace(new RegExp("(?<!~)(?<!d)d(?!d)", "g"), a.toLocaleString(r, { day: "numeric" })).replace(new RegExp("(?<!~)(?<!D)DDD(?!D)", "g"), p(a.toLocaleString(r, { weekday: "long" }))).replace(new RegExp("(?<!~)(?<!D)DD(?!D)", "g"), p(a.toLocaleString(r, { weekday: "short" }))).replace(new RegExp("(?<!~)(?<!D)D(?!D)", "g"), p(a.toLocaleString(r, { weekday: "narrow" }))).replace(new RegExp("(?<!~)(?<!M)MMM(?!M)", "g"), a.toLocaleString(r, { month: "long" })).replace(new RegExp("(?<!~)(?<!M)MM(?!M)", "g"), a.toLocaleString(r, { month: "short" })).replace(new RegExp("(?<!~)(?<!M)M(?!M)", "g"), a.toLocaleString(r, { month: "narrow" })).replace(/~y/g, "y").replace(/~m/g, "m").replace(/~M/g, "M").replace(/~d/g, "d").replace(/~D/g, "D").replace(/~H/g, "H").replace(/~n/g, "n").replace(/~s/g, "s").replace(/~a/g, "a").replace(/~h/g, "h");
})(n, e, l) : n.toLocaleDateString(l ?? "en-US", t), p = (e) => e.startsWith("M") ? "~" + e : e, y = (e) => e === "AM" ? "A~M" : e === "PM" ? "P~M" : e, H = (e) => e === 0 ? 12 : e !== void 0 ? d(e) : "", Y = (e) => e !== void 0 ? d(e) : "";
export {
  f as a,
  M as b,
  E as c,
  D as d,
  x as e,
  v as f,
  h as g,
  L as h,
  d as i,
  S as j,
  R as k,
  w as l,
  m,
  H as n,
  Y as o,
  i as p
};
