import { DateArray, DateObjectUnits, DatePickerOnChange, MakeOptionalRequired } from './types';
import { CustomAccessor, CustomSetter } from './generate';

export declare const isOptionSelectedOnSelector: (value: string, index: CustomAccessor<number>, props: {
    useValueAsName?: boolean;
    option?: CustomAccessor<number>;
}) => boolean;
export declare const isOptionDisabledOnSelector: (value: string, index: CustomAccessor<number>, props: {
    useValueAsName?: boolean;
    minDate?: MakeOptionalRequired<DateObjectUnits>;
    maxDate?: MakeOptionalRequired<DateObjectUnits>;
    enabledDays?: DateArray[];
    year?: CustomAccessor<number>;
}) => boolean;
export declare const handleSelectorOptionClick: (index: number, value: string, props: {
    useValueAsName?: boolean;
    setOption?: CustomSetter<number>;
    onYearChange?: (year: number) => void;
    onMonthChange?: (month: number) => void;
    onChange?: (data: DatePickerOnChange) => void;
    startDay?: DateObjectUnits;
    type?: "single" | "multiple" | "range";
}, callback?: () => void) => void;
