import { d as E, e as x, f as d, h as s, j as k, c as C, k as o, l as Y, m as I, n as w, i as A, o as M, p as R, q as D } from "./general-D5nVjUqG.js";
import { r as G, s as J, t as K, w as Q, u as U, v as X } from "./general-D5nVjUqG.js";
import { j as t, m as O, c as T } from "./format-CMbjATj9.js";
import { n as v, o as V, k as y, p } from "./format-CMbjATj9.js";
const $ = (a, i, e) => e.useValueAsName ? isNaN(Number(a)) ? t(e.option) === a : t(e.option) === Number(a) : t(e.option) === t(i), j = (a, i, e) => {
  var n, r, g, c, h;
  if (e.useValueAsName) {
    if (e.minDate || e.maxDate)
      return ((n = e.minDate) != null && n.year ? Number(a) < ((r = e.minDate) == null ? void 0 : r.year) : !1) || ((g = e.maxDate) != null && g.year ? Number(a) > ((c = e.maxDate) == null ? void 0 : c.year) : !1);
    if (e.enabledDays)
      return e.enabledDays.every((m) => "start" in m && "end" in m ? m.start.year !== Number(a) || m.end.year !== Number(a) : m.year !== Number(a));
  } else {
    if (e.minDate || e.maxDate)
      return (e.minDate ? e.minDate.year === t(e.year) && t(i) < e.minDate.month || ((h = e.minDate) == null ? void 0 : h.year) > (t(e.year) || 0) : !1) || (e.maxDate ? e.maxDate.year === t(e.year) && t(i) > e.maxDate.month : !1);
    if (e.enabledDays && t(e.year))
      return E({
        year: t(e.year),
        month: t(i),
        enabledDays: e.enabledDays
      });
  }
  return !1;
}, L = (a, i, e, n) => {
  var r, g, c, h, m, N;
  if (e.useValueAsName) {
    const f = Number(i);
    (r = e.setOption) == null || r.call(e, f), (g = e.onYearChange) == null || g.call(e, f);
    const u = x({
      startDay: e.startDay,
      year: f,
      type: e.type || "single"
    });
    u && ((c = e.onChange) == null || c.call(e, u));
  } else {
    (h = e.setOption) == null || h.call(e, a), (m = e.onMonthChange) == null || m.call(e, a);
    const f = x({
      startDay: e.startDay,
      month: a,
      type: e.type || "single"
    });
    f && ((N = e.onChange) == null || N.call(e, f));
  }
  n == null || n();
}, Z = ({
  year: a,
  month: i,
  endDay: e,
  day: n,
  startDay: r,
  customDaysClassName: g,
  multipleObject: c,
  hideOutSideDays: h,
  hoverRangeValue: m,
  minDate: N,
  maxDate: f,
  disabledDays: u,
  enabledDays: P
}) => {
  var l;
  const b = `${t(a)}-${d(t(i), n.month)}-${n.value}`;
  return {
    dayRangeEndHover: B(
      m,
      r,
      n,
      a,
      i
    ),
    dayRangeStartEnd: (t(m).start || r) && (t(m).end || e) && (s({
      year: t(a),
      month: t(i),
      day: n.value,
      dateRange: t(m).start || r,
      monthStatus: n.month
    }) || s({
      year: t(a),
      month: t(i),
      day: n.value,
      dateRange: t(m).end || e,
      monthStatus: n.month
    })),
    dayRangeBetween: k({
      year: t(a),
      month: t(i),
      day: n.value,
      startDate: t(m).start || r,
      endDate: t(m).end || e,
      monthStatus: n.month
    }),
    dayRangeStart: s({
      year: t(a),
      month: t(i),
      day: n.value,
      dateRange: t(m).start || r,
      monthStatus: n.month
    }),
    dayRangeEnd: s({
      year: t(a),
      month: t(i),
      day: n.value,
      dateRange: t(m).end || e,
      monthStatus: n.month
    }),
    daysCurrent: C(
      O(
        o(
          t(a),
          t(i),
          n.month
        ),
        d(t(i), n.month),
        n.value
      )
    ) && n.month === "current",
    daysNotCurrentMonth: n.month !== "current",
    ...Y({
      year: t(a),
      month: t(i),
      day: n
    }),
    customDayClass: (l = g == null ? void 0 : g.find(
      (S) => S.year === o(
        t(a),
        t(i),
        n.month
      ) && S.month === d(t(i), n.month) && S.day === n.value
    )) == null ? void 0 : l.className,
    isMultipleSelected: !!(c != null && c.find(
      (S) => S.year === o(
        t(a),
        t(i),
        n.month
      ) && S.month === d(t(i), n.month) && S.day === n.value
    )),
    hidden: h ? n.month !== "current" : !1,
    disabled: I({
      disabledDays: u,
      day: n,
      month: t(i),
      year: t(a)
    }) || w({
      day: n,
      month: i,
      year: a,
      minDate: N,
      maxDate: f
    }) || E({
      enabledDays: P,
      day: n,
      month: t(i),
      year: t(a)
    }),
    date: b,
    dateValue: b
  };
}, B = (a, i, e, n, r) => {
  var g, c;
  return !((g = t(a).end) != null && g.day) || !((c = t(a).start) != null && c.day) || !(i != null && i.day) ? !1 : A(
    t(a).start,
    i
  ) ? M(t(a).start, {
    year: o(
      t(n),
      t(r),
      e.month
    ),
    month: d(t(r), e.month),
    day: e.value
  }) : A(i, t(a).end) ? M(t(a).end, {
    year: o(
      t(n),
      t(r),
      e.month
    ),
    month: d(t(r), e.month),
    day: e.value
  }) : !1;
}, q = ({
  year: a,
  day: i,
  startDay: e,
  endDay: n,
  disabledDays: r,
  month: g,
  hover: c,
  hoverEndDay: h,
  enabledDays: m,
  disallowSameDayRange: N
}) => {
  if ((e && n || !e && !n) && !c && !h)
    return {
      start: {
        year: o(
          t(a),
          t(g),
          i.month
        ),
        month: d(t(g), i.month),
        day: i.value
      },
      end: void 0,
      initial: !0
    };
  if (e && !n) {
    const f = O(
      e == null ? void 0 : e.year,
      e == null ? void 0 : e.month,
      e == null ? void 0 : e.day
    ), u = O(
      o(
        t(a),
        t(g),
        i.month
      ),
      d(t(g), i.month),
      i.value
    );
    if (f.getTime() === u.getTime())
      return N ? {
        start: e
      } : {
        start: e,
        end: T(u)
      };
    if (f.getTime() < u.getTime() && (r && R(f, u, r) || m && D(f, u, m)))
      return c ? {
        start: e
      } : {
        start: T(u),
        initial: !0
      };
    if (f.getTime() > u.getTime() && (r && R(f, u, r) || m && D(u, f, m)))
      return c ? {
        start: e
      } : {
        start: T(u),
        initial: !0
      };
    if (f.getTime() < u.getTime())
      return {
        end: T(u),
        start: e
      };
    if (f.getTime() > u.getTime())
      return {
        start: T(u),
        end: T(f)
      };
  }
  return {
    start: e,
    end: n
  };
};
export {
  Z as applyDateRangeProps,
  G as breakArrayIntoSubArrays,
  M as compareObjectDate,
  J as currentYear,
  v as formatHourWithLeadingZero,
  V as formatMinuteSecondWithLeadingZero,
  K as generateYearsArray,
  d as getDatePickerRefactoredMonth,
  o as getDatePickerRefactoredYear,
  Q as getMonthDaysArray,
  x as getOnChangeSingleData,
  U as getRefactoredNextDate,
  X as getRefactoredPrevDate,
  y as getYearRange,
  q as handleDateRange,
  L as handleSelectorOptionClick,
  E as isNotPartOfEnabledDays,
  j as isOptionDisabledOnSelector,
  $ as isOptionSelectedOnSelector,
  p as numberFormatter
};
